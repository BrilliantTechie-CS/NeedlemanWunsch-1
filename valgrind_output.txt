==3292== Memcheck, a memory error detector
==3292== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==3292== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info
==3292== Command: ./foobar
==3292== 
==3292== Invalid write of size 4
==3292==    at 0x8048893: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:21)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90b8 is 0 bytes inside a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== Invalid write of size 4
==3292==    at 0x804889B: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:21)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90bc is 3 bytes after a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== Invalid read of size 4
==3292==    at 0x80488A1: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:23)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90b8 is 0 bytes inside a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== Invalid write of size 4
==3292==    at 0x80488B0: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:23)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90c0 is 7 bytes after a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== Invalid read of size 4
==3292==    at 0x80488B6: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:28)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90bc is 3 bytes after a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== Invalid write of size 4
==3292==    at 0x80488C6: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:28)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90c4 is 11 bytes after a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== Invalid write of size 4
==3292==    at 0x8048900: MyClass::MyClass(std::string*, std::string*) (MyClass.cpp:30)
==3292==    by 0x8048785: main (test.cpp:11)
==3292==  Address 0x42b90c8 is 15 bytes after a block of size 1 alloc'd
==3292==    at 0x402471C: operator new(unsigned int) (vg_replace_malloc.c:255)
==3292==    by 0x8048769: main (test.cpp:11)
==3292== 
==3292== 
==3292== HEAP SUMMARY:
==3292==     in use at exit: 13 bytes in 2 blocks
==3292==   total heap usage: 4 allocs, 2 frees, 51 bytes allocated
==3292== 
==3292== LEAK SUMMARY:
==3292==    definitely lost: 13 bytes in 2 blocks
==3292==    indirectly lost: 0 bytes in 0 blocks
==3292==      possibly lost: 0 bytes in 0 blocks
==3292==    still reachable: 0 bytes in 0 blocks
==3292==         suppressed: 0 bytes in 0 blocks
==3292== Rerun with --leak-check=full to see details of leaked memory
==3292== 
==3292== For counts of detected and suppressed errors, rerun with: -v
==3292== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 19 from 8)
